/*
 * This file is generated by jOOQ.
 */
package gov.epa.bencloud.server.database.jooq.data.tables;


import gov.epa.bencloud.server.database.jooq.data.Data;
import gov.epa.bencloud.server.database.jooq.data.Keys;
import gov.epa.bencloud.server.database.jooq.data.tables.records.ExposureFunctionGroupRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row4;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ExposureFunctionGroup extends TableImpl<ExposureFunctionGroupRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>data.exposure_function_group</code>
     */
    public static final ExposureFunctionGroup EXPOSURE_FUNCTION_GROUP = new ExposureFunctionGroup();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ExposureFunctionGroupRecord> getRecordType() {
        return ExposureFunctionGroupRecord.class;
    }

    /**
     * The column <code>data.exposure_function_group.id</code>.
     */
    public final TableField<ExposureFunctionGroupRecord, Integer> ID = createField(DSL.name("id"), SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>data.exposure_function_group.name</code>.
     */
    public final TableField<ExposureFunctionGroupRecord, String> NAME = createField(DSL.name("name"), SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>data.exposure_function_group.help_text</code>.
     */
    public final TableField<ExposureFunctionGroupRecord, String> HELP_TEXT = createField(DSL.name("help_text"), SQLDataType.CLOB, this, "");

    /**
     * The column <code>data.exposure_function_group.pollutant_id</code>.
     */
    public final TableField<ExposureFunctionGroupRecord, Integer> POLLUTANT_ID = createField(DSL.name("pollutant_id"), SQLDataType.INTEGER, this, "");

    private ExposureFunctionGroup(Name alias, Table<ExposureFunctionGroupRecord> aliased) {
        this(alias, aliased, null);
    }

    private ExposureFunctionGroup(Name alias, Table<ExposureFunctionGroupRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>data.exposure_function_group</code> table
     * reference
     */
    public ExposureFunctionGroup(String alias) {
        this(DSL.name(alias), EXPOSURE_FUNCTION_GROUP);
    }

    /**
     * Create an aliased <code>data.exposure_function_group</code> table
     * reference
     */
    public ExposureFunctionGroup(Name alias) {
        this(alias, EXPOSURE_FUNCTION_GROUP);
    }

    /**
     * Create a <code>data.exposure_function_group</code> table reference
     */
    public ExposureFunctionGroup() {
        this(DSL.name("exposure_function_group"), null);
    }

    public <O extends Record> ExposureFunctionGroup(Table<O> child, ForeignKey<O, ExposureFunctionGroupRecord> key) {
        super(child, key, EXPOSURE_FUNCTION_GROUP);
    }

    @Override
    public Schema getSchema() {
        return aliased() ? null : Data.DATA;
    }

    @Override
    public Identity<ExposureFunctionGroupRecord, Integer> getIdentity() {
        return (Identity<ExposureFunctionGroupRecord, Integer>) super.getIdentity();
    }

    @Override
    public UniqueKey<ExposureFunctionGroupRecord> getPrimaryKey() {
        return Keys.EXPOSURE_FUNCTION_GROUP_PKEY;
    }

    @Override
    public ExposureFunctionGroup as(String alias) {
        return new ExposureFunctionGroup(DSL.name(alias), this);
    }

    @Override
    public ExposureFunctionGroup as(Name alias) {
        return new ExposureFunctionGroup(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public ExposureFunctionGroup rename(String name) {
        return new ExposureFunctionGroup(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public ExposureFunctionGroup rename(Name name) {
        return new ExposureFunctionGroup(name, null);
    }

    // -------------------------------------------------------------------------
    // Row4 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row4<Integer, String, String, Integer> fieldsRow() {
        return (Row4) super.fieldsRow();
    }
}
