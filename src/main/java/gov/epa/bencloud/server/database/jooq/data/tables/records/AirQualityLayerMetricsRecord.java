/*
 * This file is generated by jOOQ.
 */
package gov.epa.bencloud.server.database.jooq.data.tables.records;


import gov.epa.bencloud.server.database.jooq.data.tables.AirQualityLayerMetrics;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record12;
import org.jooq.Row12;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AirQualityLayerMetricsRecord extends UpdatableRecordImpl<AirQualityLayerMetricsRecord> implements Record12<Integer, Integer, Integer, Integer, Integer, Integer, Double, Double, Double, Double, Double, Integer> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>data.air_quality_layer_metrics.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>data.air_quality_layer_metrics.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for
     * <code>data.air_quality_layer_metrics.air_quality_layer_id</code>.
     */
    public void setAirQualityLayerId(Integer value) {
        set(1, value);
    }

    /**
     * Getter for
     * <code>data.air_quality_layer_metrics.air_quality_layer_id</code>.
     */
    public Integer getAirQualityLayerId() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>data.air_quality_layer_metrics.metric_id</code>.
     */
    public void setMetricId(Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>data.air_quality_layer_metrics.metric_id</code>.
     */
    public Integer getMetricId() {
        return (Integer) get(2);
    }

    /**
     * Setter for
     * <code>data.air_quality_layer_metrics.seasonal_metric_id</code>.
     */
    public void setSeasonalMetricId(Integer value) {
        set(3, value);
    }

    /**
     * Getter for
     * <code>data.air_quality_layer_metrics.seasonal_metric_id</code>.
     */
    public Integer getSeasonalMetricId() {
        return (Integer) get(3);
    }

    /**
     * Setter for
     * <code>data.air_quality_layer_metrics.annual_statistic_id</code>.
     */
    public void setAnnualStatisticId(Integer value) {
        set(4, value);
    }

    /**
     * Getter for
     * <code>data.air_quality_layer_metrics.annual_statistic_id</code>.
     */
    public Integer getAnnualStatisticId() {
        return (Integer) get(4);
    }

    /**
     * Setter for <code>data.air_quality_layer_metrics.cell_count</code>.
     */
    public void setCellCount(Integer value) {
        set(5, value);
    }

    /**
     * Getter for <code>data.air_quality_layer_metrics.cell_count</code>.
     */
    public Integer getCellCount() {
        return (Integer) get(5);
    }

    /**
     * Setter for <code>data.air_quality_layer_metrics.min_value</code>.
     */
    public void setMinValue(Double value) {
        set(6, value);
    }

    /**
     * Getter for <code>data.air_quality_layer_metrics.min_value</code>.
     */
    public Double getMinValue() {
        return (Double) get(6);
    }

    /**
     * Setter for <code>data.air_quality_layer_metrics.max_value</code>.
     */
    public void setMaxValue(Double value) {
        set(7, value);
    }

    /**
     * Getter for <code>data.air_quality_layer_metrics.max_value</code>.
     */
    public Double getMaxValue() {
        return (Double) get(7);
    }

    /**
     * Setter for <code>data.air_quality_layer_metrics.mean_value</code>.
     */
    public void setMeanValue(Double value) {
        set(8, value);
    }

    /**
     * Getter for <code>data.air_quality_layer_metrics.mean_value</code>.
     */
    public Double getMeanValue() {
        return (Double) get(8);
    }

    /**
     * Setter for <code>data.air_quality_layer_metrics.pct_2_5</code>.
     */
    public void setPct_2_5(Double value) {
        set(9, value);
    }

    /**
     * Getter for <code>data.air_quality_layer_metrics.pct_2_5</code>.
     */
    public Double getPct_2_5() {
        return (Double) get(9);
    }

    /**
     * Setter for <code>data.air_quality_layer_metrics.pct_97_5</code>.
     */
    public void setPct_97_5(Double value) {
        set(10, value);
    }

    /**
     * Getter for <code>data.air_quality_layer_metrics.pct_97_5</code>.
     */
    public Double getPct_97_5() {
        return (Double) get(10);
    }

    /**
     * Setter for
     * <code>data.air_quality_layer_metrics.cell_count_above_lrl</code>.
     */
    public void setCellCountAboveLrl(Integer value) {
        set(11, value);
    }

    /**
     * Getter for
     * <code>data.air_quality_layer_metrics.cell_count_above_lrl</code>.
     */
    public Integer getCellCountAboveLrl() {
        return (Integer) get(11);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record12 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row12<Integer, Integer, Integer, Integer, Integer, Integer, Double, Double, Double, Double, Double, Integer> fieldsRow() {
        return (Row12) super.fieldsRow();
    }

    @Override
    public Row12<Integer, Integer, Integer, Integer, Integer, Integer, Double, Double, Double, Double, Double, Integer> valuesRow() {
        return (Row12) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return AirQualityLayerMetrics.AIR_QUALITY_LAYER_METRICS.ID;
    }

    @Override
    public Field<Integer> field2() {
        return AirQualityLayerMetrics.AIR_QUALITY_LAYER_METRICS.AIR_QUALITY_LAYER_ID;
    }

    @Override
    public Field<Integer> field3() {
        return AirQualityLayerMetrics.AIR_QUALITY_LAYER_METRICS.METRIC_ID;
    }

    @Override
    public Field<Integer> field4() {
        return AirQualityLayerMetrics.AIR_QUALITY_LAYER_METRICS.SEASONAL_METRIC_ID;
    }

    @Override
    public Field<Integer> field5() {
        return AirQualityLayerMetrics.AIR_QUALITY_LAYER_METRICS.ANNUAL_STATISTIC_ID;
    }

    @Override
    public Field<Integer> field6() {
        return AirQualityLayerMetrics.AIR_QUALITY_LAYER_METRICS.CELL_COUNT;
    }

    @Override
    public Field<Double> field7() {
        return AirQualityLayerMetrics.AIR_QUALITY_LAYER_METRICS.MIN_VALUE;
    }

    @Override
    public Field<Double> field8() {
        return AirQualityLayerMetrics.AIR_QUALITY_LAYER_METRICS.MAX_VALUE;
    }

    @Override
    public Field<Double> field9() {
        return AirQualityLayerMetrics.AIR_QUALITY_LAYER_METRICS.MEAN_VALUE;
    }

    @Override
    public Field<Double> field10() {
        return AirQualityLayerMetrics.AIR_QUALITY_LAYER_METRICS.PCT_2_5;
    }

    @Override
    public Field<Double> field11() {
        return AirQualityLayerMetrics.AIR_QUALITY_LAYER_METRICS.PCT_97_5;
    }

    @Override
    public Field<Integer> field12() {
        return AirQualityLayerMetrics.AIR_QUALITY_LAYER_METRICS.CELL_COUNT_ABOVE_LRL;
    }

    @Override
    public Integer component1() {
        return getId();
    }

    @Override
    public Integer component2() {
        return getAirQualityLayerId();
    }

    @Override
    public Integer component3() {
        return getMetricId();
    }

    @Override
    public Integer component4() {
        return getSeasonalMetricId();
    }

    @Override
    public Integer component5() {
        return getAnnualStatisticId();
    }

    @Override
    public Integer component6() {
        return getCellCount();
    }

    @Override
    public Double component7() {
        return getMinValue();
    }

    @Override
    public Double component8() {
        return getMaxValue();
    }

    @Override
    public Double component9() {
        return getMeanValue();
    }

    @Override
    public Double component10() {
        return getPct_2_5();
    }

    @Override
    public Double component11() {
        return getPct_97_5();
    }

    @Override
    public Integer component12() {
        return getCellCountAboveLrl();
    }

    @Override
    public Integer value1() {
        return getId();
    }

    @Override
    public Integer value2() {
        return getAirQualityLayerId();
    }

    @Override
    public Integer value3() {
        return getMetricId();
    }

    @Override
    public Integer value4() {
        return getSeasonalMetricId();
    }

    @Override
    public Integer value5() {
        return getAnnualStatisticId();
    }

    @Override
    public Integer value6() {
        return getCellCount();
    }

    @Override
    public Double value7() {
        return getMinValue();
    }

    @Override
    public Double value8() {
        return getMaxValue();
    }

    @Override
    public Double value9() {
        return getMeanValue();
    }

    @Override
    public Double value10() {
        return getPct_2_5();
    }

    @Override
    public Double value11() {
        return getPct_97_5();
    }

    @Override
    public Integer value12() {
        return getCellCountAboveLrl();
    }

    @Override
    public AirQualityLayerMetricsRecord value1(Integer value) {
        setId(value);
        return this;
    }

    @Override
    public AirQualityLayerMetricsRecord value2(Integer value) {
        setAirQualityLayerId(value);
        return this;
    }

    @Override
    public AirQualityLayerMetricsRecord value3(Integer value) {
        setMetricId(value);
        return this;
    }

    @Override
    public AirQualityLayerMetricsRecord value4(Integer value) {
        setSeasonalMetricId(value);
        return this;
    }

    @Override
    public AirQualityLayerMetricsRecord value5(Integer value) {
        setAnnualStatisticId(value);
        return this;
    }

    @Override
    public AirQualityLayerMetricsRecord value6(Integer value) {
        setCellCount(value);
        return this;
    }

    @Override
    public AirQualityLayerMetricsRecord value7(Double value) {
        setMinValue(value);
        return this;
    }

    @Override
    public AirQualityLayerMetricsRecord value8(Double value) {
        setMaxValue(value);
        return this;
    }

    @Override
    public AirQualityLayerMetricsRecord value9(Double value) {
        setMeanValue(value);
        return this;
    }

    @Override
    public AirQualityLayerMetricsRecord value10(Double value) {
        setPct_2_5(value);
        return this;
    }

    @Override
    public AirQualityLayerMetricsRecord value11(Double value) {
        setPct_97_5(value);
        return this;
    }

    @Override
    public AirQualityLayerMetricsRecord value12(Integer value) {
        setCellCountAboveLrl(value);
        return this;
    }

    @Override
    public AirQualityLayerMetricsRecord values(Integer value1, Integer value2, Integer value3, Integer value4, Integer value5, Integer value6, Double value7, Double value8, Double value9, Double value10, Double value11, Integer value12) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        value12(value12);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached AirQualityLayerMetricsRecord
     */
    public AirQualityLayerMetricsRecord() {
        super(AirQualityLayerMetrics.AIR_QUALITY_LAYER_METRICS);
    }

    /**
     * Create a detached, initialised AirQualityLayerMetricsRecord
     */
    public AirQualityLayerMetricsRecord(Integer id, Integer airQualityLayerId, Integer metricId, Integer seasonalMetricId, Integer annualStatisticId, Integer cellCount, Double minValue, Double maxValue, Double meanValue, Double pct_2_5, Double pct_97_5, Integer cellCountAboveLrl) {
        super(AirQualityLayerMetrics.AIR_QUALITY_LAYER_METRICS);

        setId(id);
        setAirQualityLayerId(airQualityLayerId);
        setMetricId(metricId);
        setSeasonalMetricId(seasonalMetricId);
        setAnnualStatisticId(annualStatisticId);
        setCellCount(cellCount);
        setMinValue(minValue);
        setMaxValue(maxValue);
        setMeanValue(meanValue);
        setPct_2_5(pct_2_5);
        setPct_97_5(pct_97_5);
        setCellCountAboveLrl(cellCountAboveLrl);
    }
}
