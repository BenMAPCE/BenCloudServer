/*
 * This file is generated by jOOQ.
 */
package gov.epa.bencloud.server.database.jooq.grids.tables;


import gov.epa.bencloud.server.database.jooq.grids.Grids;
import gov.epa.bencloud.server.database.jooq.grids.Indexes;
import gov.epa.bencloud.server.database.jooq.grids.Keys;
import gov.epa.bencloud.server.database.jooq.grids.tables.records.UsaCtGridsDissolveRecord;

import java.math.BigDecimal;
import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row4;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UsaCtGridsDissolve extends TableImpl<UsaCtGridsDissolveRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>grids.usa_ct_grids_dissolve</code>
     */
    public static final UsaCtGridsDissolve USA_CT_GRIDS_DISSOLVE = new UsaCtGridsDissolve();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<UsaCtGridsDissolveRecord> getRecordType() {
        return UsaCtGridsDissolveRecord.class;
    }

    /**
     * The column <code>grids.usa_ct_grids_dissolve.gid</code>.
     */
    public final TableField<UsaCtGridsDissolveRecord, Integer> GID = createField(DSL.name("gid"), SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>grids.usa_ct_grids_dissolve.row</code>.
     */
    public final TableField<UsaCtGridsDissolveRecord, BigDecimal> ROW = createField(DSL.name("row"), SQLDataType.NUMERIC, this, "");

    /**
     * The column <code>grids.usa_ct_grids_dissolve.col</code>.
     */
    public final TableField<UsaCtGridsDissolveRecord, BigDecimal> COL = createField(DSL.name("col"), SQLDataType.NUMERIC, this, "");

    /**
     * @deprecated Unknown data type. Please define an explicit {@link
     * org.jooq.Binding} to specify how this type should be handled. Deprecation
     * can be turned off using {@literal <deprecationOnUnknownTypes/>} in your
     * code generator configuration.
     */
    @Deprecated
    public final TableField<UsaCtGridsDissolveRecord, Object> GEOM = createField(DSL.name("geom"), org.jooq.impl.DefaultDataType.getDefaultDataType("\"public\".\"geometry\""), this, "");

    private UsaCtGridsDissolve(Name alias, Table<UsaCtGridsDissolveRecord> aliased) {
        this(alias, aliased, null);
    }

    private UsaCtGridsDissolve(Name alias, Table<UsaCtGridsDissolveRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>grids.usa_ct_grids_dissolve</code> table
     * reference
     */
    public UsaCtGridsDissolve(String alias) {
        this(DSL.name(alias), USA_CT_GRIDS_DISSOLVE);
    }

    /**
     * Create an aliased <code>grids.usa_ct_grids_dissolve</code> table
     * reference
     */
    public UsaCtGridsDissolve(Name alias) {
        this(alias, USA_CT_GRIDS_DISSOLVE);
    }

    /**
     * Create a <code>grids.usa_ct_grids_dissolve</code> table reference
     */
    public UsaCtGridsDissolve() {
        this(DSL.name("usa_ct_grids_dissolve"), null);
    }

    public <O extends Record> UsaCtGridsDissolve(Table<O> child, ForeignKey<O, UsaCtGridsDissolveRecord> key) {
        super(child, key, USA_CT_GRIDS_DISSOLVE);
    }

    @Override
    public Schema getSchema() {
        return aliased() ? null : Grids.GRIDS;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.asList(Indexes.USA_CT_GRIDS_DISSOLVE_GEOM_IDX);
    }

    @Override
    public Identity<UsaCtGridsDissolveRecord, Integer> getIdentity() {
        return (Identity<UsaCtGridsDissolveRecord, Integer>) super.getIdentity();
    }

    @Override
    public UniqueKey<UsaCtGridsDissolveRecord> getPrimaryKey() {
        return Keys.USA_CT_GRIDS_DISSOLVE_PKEY;
    }

    @Override
    public UsaCtGridsDissolve as(String alias) {
        return new UsaCtGridsDissolve(DSL.name(alias), this);
    }

    @Override
    public UsaCtGridsDissolve as(Name alias) {
        return new UsaCtGridsDissolve(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public UsaCtGridsDissolve rename(String name) {
        return new UsaCtGridsDissolve(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public UsaCtGridsDissolve rename(Name name) {
        return new UsaCtGridsDissolve(name, null);
    }

    // -------------------------------------------------------------------------
    // Row4 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row4<Integer, BigDecimal, BigDecimal, Object> fieldsRow() {
        return (Row4) super.fieldsRow();
    }
}
