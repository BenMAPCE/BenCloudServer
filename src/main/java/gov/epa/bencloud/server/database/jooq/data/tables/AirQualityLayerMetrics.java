/*
 * This file is generated by jOOQ.
 */
package gov.epa.bencloud.server.database.jooq.data.tables;


import gov.epa.bencloud.server.database.jooq.data.Data;
import gov.epa.bencloud.server.database.jooq.data.Keys;
import gov.epa.bencloud.server.database.jooq.data.tables.records.AirQualityLayerMetricsRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row12;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AirQualityLayerMetrics extends TableImpl<AirQualityLayerMetricsRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>data.air_quality_layer_metrics</code>
     */
    public static final AirQualityLayerMetrics AIR_QUALITY_LAYER_METRICS = new AirQualityLayerMetrics();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<AirQualityLayerMetricsRecord> getRecordType() {
        return AirQualityLayerMetricsRecord.class;
    }

    /**
     * The column <code>data.air_quality_layer_metrics.id</code>.
     */
    public final TableField<AirQualityLayerMetricsRecord, Integer> ID = createField(DSL.name("id"), SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column
     * <code>data.air_quality_layer_metrics.air_quality_layer_id</code>.
     */
    public final TableField<AirQualityLayerMetricsRecord, Integer> AIR_QUALITY_LAYER_ID = createField(DSL.name("air_quality_layer_id"), SQLDataType.INTEGER, this, "");

    /**
     * The column <code>data.air_quality_layer_metrics.metric_id</code>.
     */
    public final TableField<AirQualityLayerMetricsRecord, Integer> METRIC_ID = createField(DSL.name("metric_id"), SQLDataType.INTEGER, this, "");

    /**
     * The column
     * <code>data.air_quality_layer_metrics.seasonal_metric_id</code>.
     */
    public final TableField<AirQualityLayerMetricsRecord, Integer> SEASONAL_METRIC_ID = createField(DSL.name("seasonal_metric_id"), SQLDataType.INTEGER, this, "");

    /**
     * The column
     * <code>data.air_quality_layer_metrics.annual_statistic_id</code>.
     */
    public final TableField<AirQualityLayerMetricsRecord, Integer> ANNUAL_STATISTIC_ID = createField(DSL.name("annual_statistic_id"), SQLDataType.INTEGER, this, "");

    /**
     * The column <code>data.air_quality_layer_metrics.cell_count</code>.
     */
    public final TableField<AirQualityLayerMetricsRecord, Integer> CELL_COUNT = createField(DSL.name("cell_count"), SQLDataType.INTEGER, this, "");

    /**
     * The column <code>data.air_quality_layer_metrics.min_value</code>.
     */
    public final TableField<AirQualityLayerMetricsRecord, Double> MIN_VALUE = createField(DSL.name("min_value"), SQLDataType.DOUBLE, this, "");

    /**
     * The column <code>data.air_quality_layer_metrics.max_value</code>.
     */
    public final TableField<AirQualityLayerMetricsRecord, Double> MAX_VALUE = createField(DSL.name("max_value"), SQLDataType.DOUBLE, this, "");

    /**
     * The column <code>data.air_quality_layer_metrics.mean_value</code>.
     */
    public final TableField<AirQualityLayerMetricsRecord, Double> MEAN_VALUE = createField(DSL.name("mean_value"), SQLDataType.DOUBLE, this, "");

    /**
     * The column <code>data.air_quality_layer_metrics.pct_2_5</code>.
     */
    public final TableField<AirQualityLayerMetricsRecord, Double> PCT_2_5 = createField(DSL.name("pct_2_5"), SQLDataType.DOUBLE, this, "");

    /**
     * The column <code>data.air_quality_layer_metrics.pct_97_5</code>.
     */
    public final TableField<AirQualityLayerMetricsRecord, Double> PCT_97_5 = createField(DSL.name("pct_97_5"), SQLDataType.DOUBLE, this, "");

    /**
     * The column
     * <code>data.air_quality_layer_metrics.cell_count_above_lrl</code>.
     */
    public final TableField<AirQualityLayerMetricsRecord, Integer> CELL_COUNT_ABOVE_LRL = createField(DSL.name("cell_count_above_lrl"), SQLDataType.INTEGER, this, "");

    private AirQualityLayerMetrics(Name alias, Table<AirQualityLayerMetricsRecord> aliased) {
        this(alias, aliased, null);
    }

    private AirQualityLayerMetrics(Name alias, Table<AirQualityLayerMetricsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>data.air_quality_layer_metrics</code> table
     * reference
     */
    public AirQualityLayerMetrics(String alias) {
        this(DSL.name(alias), AIR_QUALITY_LAYER_METRICS);
    }

    /**
     * Create an aliased <code>data.air_quality_layer_metrics</code> table
     * reference
     */
    public AirQualityLayerMetrics(Name alias) {
        this(alias, AIR_QUALITY_LAYER_METRICS);
    }

    /**
     * Create a <code>data.air_quality_layer_metrics</code> table reference
     */
    public AirQualityLayerMetrics() {
        this(DSL.name("air_quality_layer_metrics"), null);
    }

    public <O extends Record> AirQualityLayerMetrics(Table<O> child, ForeignKey<O, AirQualityLayerMetricsRecord> key) {
        super(child, key, AIR_QUALITY_LAYER_METRICS);
    }

    @Override
    public Schema getSchema() {
        return aliased() ? null : Data.DATA;
    }

    @Override
    public Identity<AirQualityLayerMetricsRecord, Integer> getIdentity() {
        return (Identity<AirQualityLayerMetricsRecord, Integer>) super.getIdentity();
    }

    @Override
    public UniqueKey<AirQualityLayerMetricsRecord> getPrimaryKey() {
        return Keys.AIR_QUALITY_LAYER_METRICS_PKEY;
    }

    @Override
    public AirQualityLayerMetrics as(String alias) {
        return new AirQualityLayerMetrics(DSL.name(alias), this);
    }

    @Override
    public AirQualityLayerMetrics as(Name alias) {
        return new AirQualityLayerMetrics(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public AirQualityLayerMetrics rename(String name) {
        return new AirQualityLayerMetrics(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public AirQualityLayerMetrics rename(Name name) {
        return new AirQualityLayerMetrics(name, null);
    }

    // -------------------------------------------------------------------------
    // Row12 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row12<Integer, Integer, Integer, Integer, Integer, Integer, Double, Double, Double, Double, Double, Integer> fieldsRow() {
        return (Row12) super.fieldsRow();
    }
}
