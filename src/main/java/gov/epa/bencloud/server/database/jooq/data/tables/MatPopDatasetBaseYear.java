/*
 * This file is generated by jOOQ.
 */
package gov.epa.bencloud.server.database.jooq.data.tables;


import gov.epa.bencloud.server.database.jooq.data.Data;
import gov.epa.bencloud.server.database.jooq.data.tables.records.MatPopDatasetBaseYearRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row2;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class MatPopDatasetBaseYear extends TableImpl<MatPopDatasetBaseYearRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>data.mat_pop_dataset_base_year</code>
     */
    public static final MatPopDatasetBaseYear MAT_POP_DATASET_BASE_YEAR = new MatPopDatasetBaseYear();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<MatPopDatasetBaseYearRecord> getRecordType() {
        return MatPopDatasetBaseYearRecord.class;
    }

    /**
     * The column <code>data.mat_pop_dataset_base_year.pop_dataset_id</code>.
     */
    public final TableField<MatPopDatasetBaseYearRecord, Integer> POP_DATASET_ID = createField(DSL.name("pop_dataset_id"), SQLDataType.INTEGER, this, "");

    /**
     * The column <code>data.mat_pop_dataset_base_year.base_pop_year</code>.
     */
    public final TableField<MatPopDatasetBaseYearRecord, Short> BASE_POP_YEAR = createField(DSL.name("base_pop_year"), SQLDataType.SMALLINT, this, "");

    private MatPopDatasetBaseYear(Name alias, Table<MatPopDatasetBaseYearRecord> aliased) {
        this(alias, aliased, null);
    }

    private MatPopDatasetBaseYear(Name alias, Table<MatPopDatasetBaseYearRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.materializedView());
    }

    /**
     * Create an aliased <code>data.mat_pop_dataset_base_year</code> table
     * reference
     */
    public MatPopDatasetBaseYear(String alias) {
        this(DSL.name(alias), MAT_POP_DATASET_BASE_YEAR);
    }

    /**
     * Create an aliased <code>data.mat_pop_dataset_base_year</code> table
     * reference
     */
    public MatPopDatasetBaseYear(Name alias) {
        this(alias, MAT_POP_DATASET_BASE_YEAR);
    }

    /**
     * Create a <code>data.mat_pop_dataset_base_year</code> table reference
     */
    public MatPopDatasetBaseYear() {
        this(DSL.name("mat_pop_dataset_base_year"), null);
    }

    public <O extends Record> MatPopDatasetBaseYear(Table<O> child, ForeignKey<O, MatPopDatasetBaseYearRecord> key) {
        super(child, key, MAT_POP_DATASET_BASE_YEAR);
    }

    @Override
    public Schema getSchema() {
        return aliased() ? null : Data.DATA;
    }

    @Override
    public MatPopDatasetBaseYear as(String alias) {
        return new MatPopDatasetBaseYear(DSL.name(alias), this);
    }

    @Override
    public MatPopDatasetBaseYear as(Name alias) {
        return new MatPopDatasetBaseYear(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public MatPopDatasetBaseYear rename(String name) {
        return new MatPopDatasetBaseYear(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public MatPopDatasetBaseYear rename(Name name) {
        return new MatPopDatasetBaseYear(name, null);
    }

    // -------------------------------------------------------------------------
    // Row2 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row2<Integer, Short> fieldsRow() {
        return (Row2) super.fieldsRow();
    }
}
