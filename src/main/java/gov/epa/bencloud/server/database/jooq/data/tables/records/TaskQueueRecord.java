/*
 * This file is generated by jOOQ.
 */
package gov.epa.bencloud.server.database.jooq.data.tables.records;


import gov.epa.bencloud.server.database.jooq.data.tables.TaskQueue;

import java.time.LocalDateTime;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record15;
import org.jooq.Row15;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TaskQueueRecord extends UpdatableRecordImpl<TaskQueueRecord> implements Record15<Integer, Integer, String, String, String, String, String, String, Integer, String, Boolean, LocalDateTime, LocalDateTime, String, Short> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>data.task_queue.task_id</code>.
     */
    public void setTaskId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>data.task_queue.task_id</code>.
     */
    public Integer getTaskId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>data.task_queue.task_priority</code>.
     */
    public void setTaskPriority(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>data.task_queue.task_priority</code>.
     */
    public Integer getTaskPriority() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>data.task_queue.task_uuid</code>.
     */
    public void setTaskUuid(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>data.task_queue.task_uuid</code>.
     */
    public String getTaskUuid() {
        return (String) get(2);
    }

    /**
     * Setter for <code>data.task_queue.task_parent_uuid</code>.
     */
    public void setTaskParentUuid(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>data.task_queue.task_parent_uuid</code>.
     */
    public String getTaskParentUuid() {
        return (String) get(3);
    }

    /**
     * Setter for <code>data.task_queue.task_name</code>.
     */
    public void setTaskName(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>data.task_queue.task_name</code>.
     */
    public String getTaskName() {
        return (String) get(4);
    }

    /**
     * Setter for <code>data.task_queue.task_description</code>.
     */
    public void setTaskDescription(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>data.task_queue.task_description</code>.
     */
    public String getTaskDescription() {
        return (String) get(5);
    }

    /**
     * Setter for <code>data.task_queue.task_type</code>.
     */
    public void setTaskType(String value) {
        set(6, value);
    }

    /**
     * Getter for <code>data.task_queue.task_type</code>.
     */
    public String getTaskType() {
        return (String) get(6);
    }

    /**
     * Setter for <code>data.task_queue.task_parameters</code>.
     */
    public void setTaskParameters(String value) {
        set(7, value);
    }

    /**
     * Getter for <code>data.task_queue.task_parameters</code>.
     */
    public String getTaskParameters() {
        return (String) get(7);
    }

    /**
     * Setter for <code>data.task_queue.task_percentage</code>.
     */
    public void setTaskPercentage(Integer value) {
        set(8, value);
    }

    /**
     * Getter for <code>data.task_queue.task_percentage</code>.
     */
    public Integer getTaskPercentage() {
        return (Integer) get(8);
    }

    /**
     * Setter for <code>data.task_queue.task_message</code>.
     */
    public void setTaskMessage(String value) {
        set(9, value);
    }

    /**
     * Getter for <code>data.task_queue.task_message</code>.
     */
    public String getTaskMessage() {
        return (String) get(9);
    }

    /**
     * Setter for <code>data.task_queue.task_in_process</code>.
     */
    public void setTaskInProcess(Boolean value) {
        set(10, value);
    }

    /**
     * Getter for <code>data.task_queue.task_in_process</code>.
     */
    public Boolean getTaskInProcess() {
        return (Boolean) get(10);
    }

    /**
     * Setter for <code>data.task_queue.task_submitted_date</code>.
     */
    public void setTaskSubmittedDate(LocalDateTime value) {
        set(11, value);
    }

    /**
     * Getter for <code>data.task_queue.task_submitted_date</code>.
     */
    public LocalDateTime getTaskSubmittedDate() {
        return (LocalDateTime) get(11);
    }

    /**
     * Setter for <code>data.task_queue.task_started_date</code>.
     */
    public void setTaskStartedDate(LocalDateTime value) {
        set(12, value);
    }

    /**
     * Getter for <code>data.task_queue.task_started_date</code>.
     */
    public LocalDateTime getTaskStartedDate() {
        return (LocalDateTime) get(12);
    }

    /**
     * Setter for <code>data.task_queue.user_id</code>.
     */
    public void setUserId(String value) {
        set(13, value);
    }

    /**
     * Getter for <code>data.task_queue.user_id</code>.
     */
    public String getUserId() {
        return (String) get(13);
    }

    /**
     * Setter for <code>data.task_queue.sharing_scope</code>.
     */
    public void setSharingScope(Short value) {
        set(14, value);
    }

    /**
     * Getter for <code>data.task_queue.sharing_scope</code>.
     */
    public Short getSharingScope() {
        return (Short) get(14);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record15 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row15<Integer, Integer, String, String, String, String, String, String, Integer, String, Boolean, LocalDateTime, LocalDateTime, String, Short> fieldsRow() {
        return (Row15) super.fieldsRow();
    }

    @Override
    public Row15<Integer, Integer, String, String, String, String, String, String, Integer, String, Boolean, LocalDateTime, LocalDateTime, String, Short> valuesRow() {
        return (Row15) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return TaskQueue.TASK_QUEUE.TASK_ID;
    }

    @Override
    public Field<Integer> field2() {
        return TaskQueue.TASK_QUEUE.TASK_PRIORITY;
    }

    @Override
    public Field<String> field3() {
        return TaskQueue.TASK_QUEUE.TASK_UUID;
    }

    @Override
    public Field<String> field4() {
        return TaskQueue.TASK_QUEUE.TASK_PARENT_UUID;
    }

    @Override
    public Field<String> field5() {
        return TaskQueue.TASK_QUEUE.TASK_NAME;
    }

    @Override
    public Field<String> field6() {
        return TaskQueue.TASK_QUEUE.TASK_DESCRIPTION;
    }

    @Override
    public Field<String> field7() {
        return TaskQueue.TASK_QUEUE.TASK_TYPE;
    }

    @Override
    public Field<String> field8() {
        return TaskQueue.TASK_QUEUE.TASK_PARAMETERS;
    }

    @Override
    public Field<Integer> field9() {
        return TaskQueue.TASK_QUEUE.TASK_PERCENTAGE;
    }

    @Override
    public Field<String> field10() {
        return TaskQueue.TASK_QUEUE.TASK_MESSAGE;
    }

    @Override
    public Field<Boolean> field11() {
        return TaskQueue.TASK_QUEUE.TASK_IN_PROCESS;
    }

    @Override
    public Field<LocalDateTime> field12() {
        return TaskQueue.TASK_QUEUE.TASK_SUBMITTED_DATE;
    }

    @Override
    public Field<LocalDateTime> field13() {
        return TaskQueue.TASK_QUEUE.TASK_STARTED_DATE;
    }

    @Override
    public Field<String> field14() {
        return TaskQueue.TASK_QUEUE.USER_ID;
    }

    @Override
    public Field<Short> field15() {
        return TaskQueue.TASK_QUEUE.SHARING_SCOPE;
    }

    @Override
    public Integer component1() {
        return getTaskId();
    }

    @Override
    public Integer component2() {
        return getTaskPriority();
    }

    @Override
    public String component3() {
        return getTaskUuid();
    }

    @Override
    public String component4() {
        return getTaskParentUuid();
    }

    @Override
    public String component5() {
        return getTaskName();
    }

    @Override
    public String component6() {
        return getTaskDescription();
    }

    @Override
    public String component7() {
        return getTaskType();
    }

    @Override
    public String component8() {
        return getTaskParameters();
    }

    @Override
    public Integer component9() {
        return getTaskPercentage();
    }

    @Override
    public String component10() {
        return getTaskMessage();
    }

    @Override
    public Boolean component11() {
        return getTaskInProcess();
    }

    @Override
    public LocalDateTime component12() {
        return getTaskSubmittedDate();
    }

    @Override
    public LocalDateTime component13() {
        return getTaskStartedDate();
    }

    @Override
    public String component14() {
        return getUserId();
    }

    @Override
    public Short component15() {
        return getSharingScope();
    }

    @Override
    public Integer value1() {
        return getTaskId();
    }

    @Override
    public Integer value2() {
        return getTaskPriority();
    }

    @Override
    public String value3() {
        return getTaskUuid();
    }

    @Override
    public String value4() {
        return getTaskParentUuid();
    }

    @Override
    public String value5() {
        return getTaskName();
    }

    @Override
    public String value6() {
        return getTaskDescription();
    }

    @Override
    public String value7() {
        return getTaskType();
    }

    @Override
    public String value8() {
        return getTaskParameters();
    }

    @Override
    public Integer value9() {
        return getTaskPercentage();
    }

    @Override
    public String value10() {
        return getTaskMessage();
    }

    @Override
    public Boolean value11() {
        return getTaskInProcess();
    }

    @Override
    public LocalDateTime value12() {
        return getTaskSubmittedDate();
    }

    @Override
    public LocalDateTime value13() {
        return getTaskStartedDate();
    }

    @Override
    public String value14() {
        return getUserId();
    }

    @Override
    public Short value15() {
        return getSharingScope();
    }

    @Override
    public TaskQueueRecord value1(Integer value) {
        setTaskId(value);
        return this;
    }

    @Override
    public TaskQueueRecord value2(Integer value) {
        setTaskPriority(value);
        return this;
    }

    @Override
    public TaskQueueRecord value3(String value) {
        setTaskUuid(value);
        return this;
    }

    @Override
    public TaskQueueRecord value4(String value) {
        setTaskParentUuid(value);
        return this;
    }

    @Override
    public TaskQueueRecord value5(String value) {
        setTaskName(value);
        return this;
    }

    @Override
    public TaskQueueRecord value6(String value) {
        setTaskDescription(value);
        return this;
    }

    @Override
    public TaskQueueRecord value7(String value) {
        setTaskType(value);
        return this;
    }

    @Override
    public TaskQueueRecord value8(String value) {
        setTaskParameters(value);
        return this;
    }

    @Override
    public TaskQueueRecord value9(Integer value) {
        setTaskPercentage(value);
        return this;
    }

    @Override
    public TaskQueueRecord value10(String value) {
        setTaskMessage(value);
        return this;
    }

    @Override
    public TaskQueueRecord value11(Boolean value) {
        setTaskInProcess(value);
        return this;
    }

    @Override
    public TaskQueueRecord value12(LocalDateTime value) {
        setTaskSubmittedDate(value);
        return this;
    }

    @Override
    public TaskQueueRecord value13(LocalDateTime value) {
        setTaskStartedDate(value);
        return this;
    }

    @Override
    public TaskQueueRecord value14(String value) {
        setUserId(value);
        return this;
    }

    @Override
    public TaskQueueRecord value15(Short value) {
        setSharingScope(value);
        return this;
    }

    @Override
    public TaskQueueRecord values(Integer value1, Integer value2, String value3, String value4, String value5, String value6, String value7, String value8, Integer value9, String value10, Boolean value11, LocalDateTime value12, LocalDateTime value13, String value14, Short value15) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        value12(value12);
        value13(value13);
        value14(value14);
        value15(value15);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached TaskQueueRecord
     */
    public TaskQueueRecord() {
        super(TaskQueue.TASK_QUEUE);
    }

    /**
     * Create a detached, initialised TaskQueueRecord
     */
    public TaskQueueRecord(Integer taskId, Integer taskPriority, String taskUuid, String taskParentUuid, String taskName, String taskDescription, String taskType, String taskParameters, Integer taskPercentage, String taskMessage, Boolean taskInProcess, LocalDateTime taskSubmittedDate, LocalDateTime taskStartedDate, String userId, Short sharingScope) {
        super(TaskQueue.TASK_QUEUE);

        setTaskId(taskId);
        setTaskPriority(taskPriority);
        setTaskUuid(taskUuid);
        setTaskParentUuid(taskParentUuid);
        setTaskName(taskName);
        setTaskDescription(taskDescription);
        setTaskType(taskType);
        setTaskParameters(taskParameters);
        setTaskPercentage(taskPercentage);
        setTaskMessage(taskMessage);
        setTaskInProcess(taskInProcess);
        setTaskSubmittedDate(taskSubmittedDate);
        setTaskStartedDate(taskStartedDate);
        setUserId(userId);
        setSharingScope(sharingScope);
    }
}
