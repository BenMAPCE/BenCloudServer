# To contribute improvements to CI/CD templates, please follow the Development guide at:
# https://docs.gitlab.com/ee/development/cicd/templates.html
# This specific template is located at:
# https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/Gradle.gitlab-ci.yml

# This is the Gradle build system for JVM applications
# https://gradle.org/
# https://github.com/gradle/gradle

stages:
  - test
  - code_build
  - image_build
  - image_scan
  - application_scan
  - deploy_nonprod
  - deploy_prod

include:
  - remote: 'https://gitlab.com/prismacloud-public/shift-left/extension/-/raw/master/.pcs.gitlab-ci.yml'
#  - template: Security/SAST.gitlab-ci.yml
#  - template: Security/Dependency-Scanning.gitlab-ci.yml
#  - template: Security/License-Scanning.gitlab-ci.yml

# Disable the Gradle daemon for Continuous Integration servers as correctness
# is usually a priority over speed in CI environments. Using a fresh
# runtime for each build is more reliable since the runtime is completely
# isolated from any previous builds.
variables:
  GRADLE_OPTS: "-Dorg.gradle.daemon=false"

before_script:
  - export GRADLE_USER_HOME=`pwd`/.gradle

build_dev_jars:
  stage: code_build
  only: 
    - develop
  image: gradle:alpine
  tags:
    - benmapdevgitlab
  script:
    - gradle fatJar
    - gradle taskRunnerFatJar
    - cp build/libs/BenCloudServer.jar BenCloudServer.jar
    - cp build/libs/BenCloudTaskRunner.jar BenCloudTaskRunner.jar
  cache:
    key: "$CI_COMMIT_REF_NAME"
    policy: push
    paths:
      - build
      - .gradle
  artifacts:
    name: "$CI_COMMIT_REF_NAME"
    paths:
      - BenCloudServer.jar
      - BenCloudTaskRunner.jar
      - bencloud-server.properties

build_stage_jars:
  stage: code_build
  only: 
    - main
  image: gradle:alpine
  tags:
    - benmapstagegitlab
  script:
    - gradle fatJar
    - gradle taskRunnerFatJar
    - cp build/libs/BenCloudServer.jar BenCloudServer.jar
    - cp build/libs/BenCloudTaskRunner.jar BenCloudTaskRunner.jar
  cache:
    key: "$CI_COMMIT_REF_NAME"
    policy: push
    paths:
      - build
      - .gradle
  artifacts:
    name: "$CI_COMMIT_REF_NAME"
    paths:
      - BenCloudServer.jar
      - BenCloudTaskRunner.jar
      - bencloud-server.properties

build_dev_server_image:
  stage: image_build
  only: 
    - develop
  tags:
    - benmapdevgitlab
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [""]
  script:
    - mkdir -p /kaniko/.docker
    - echo "{\"auths\":{\"$CI_REGISTRY\":{\"username\":\"$CI_REGISTRY_USER\",\"password\":\"$CI_REGISTRY_PASSWORD\"}}}" > /kaniko/.docker/config.json
    - /kaniko/executor --context $CI_PROJECT_DIR --dockerfile $CI_PROJECT_DIR/docker/bencloudserver/Dockerfile --destination $CI_REGISTRY_IMAGE/bencloudserver:$CI_COMMIT_SHORT_SHA
  dependencies:
    - build_dev_jars

build_stage_server_image:
  stage: image_build
  only: 
    - main
  tags:
    - benmapstagegitlab
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [""]
  script:
    - mkdir -p /kaniko/.docker
    - echo "{\"auths\":{\"$CI_REGISTRY\":{\"username\":\"$CI_REGISTRY_USER\",\"password\":\"$CI_REGISTRY_PASSWORD\"}}}" > /kaniko/.docker/config.json
    - /kaniko/executor --context $CI_PROJECT_DIR --dockerfile $CI_PROJECT_DIR/docker/bencloudserver/Dockerfile --destination $CI_REGISTRY_IMAGE/bencloudserver:$CI_COMMIT_SHORT_SHA
  dependencies:
    - build_stage_jars

build_dev_runner_image:
  stage: image_build
  only: 
    - develop
  tags:
    - benmapdevgitlab
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [""]
  script:
    - mkdir -p /kaniko/.docker
    - echo "{\"auths\":{\"$CI_REGISTRY\":{\"username\":\"$CI_REGISTRY_USER\",\"password\":\"$CI_REGISTRY_PASSWORD\"}}}" > /kaniko/.docker/config.json
    - /kaniko/executor --context $CI_PROJECT_DIR --dockerfile $CI_PROJECT_DIR/docker/bencloudtaskrunner/Dockerfile --destination $CI_REGISTRY_IMAGE/bencloudtaskrunner:$CI_COMMIT_SHORT_SHA
  dependencies:
    - build_dev_jars

build_stage_runner_image:
  stage: image_build
  only: 
    - main
  tags:
    - benmapstagegitlab
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [""]
  script:
    - mkdir -p /kaniko/.docker
    - echo "{\"auths\":{\"$CI_REGISTRY\":{\"username\":\"$CI_REGISTRY_USER\",\"password\":\"$CI_REGISTRY_PASSWORD\"}}}" > /kaniko/.docker/config.json
    - /kaniko/executor --context $CI_PROJECT_DIR --dockerfile $CI_PROJECT_DIR/docker/bencloudtaskrunner/Dockerfile --destination $CI_REGISTRY_IMAGE/bencloudtaskrunner:$CI_COMMIT_SHORT_SHA
  dependencies:
    - build_stage_jars

prisma_cloud_compute_scan:
  stage: image_scan
  extends:
    - .pcs_compute_scan
  tags:
    - twistcli
  when: manual
  allow_failure: true
  parallel:
    matrix:
      - prisma_cloud_scan_image: ["$CI_REGISTRY_IMAGE/bencloudserver:$CI_COMMIT_SHORT_SHA","$CI_REGISTRY_IMAGE/bencloudtaskrunner:$CI_COMMIT_SHORT_SHA"]
  variables:
      prisma_cloud_compute_url: "https://prismacloud.gitlab-prod.aws.epa.gov"
      GIT_STRATEGY: clone
  script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD registry.epa.gov
    - docker pull $prisma_cloud_scan_image
    - ./image_scan.sh  

net_sparker:
  stage: application_scan
  tags:
    - devsecops-instance
  when: manual
  image: docker:20.10
  # This needs a NetSparker image to invoke the scan.
  script:
    - echo "Simulate a NetSparker scan."

deploy_testdev:
  stage: deploy_nonprod
  only: 
    - develop
  tags:
    - benmapdevgitlab
  when: manual
  image: dtzar/helm-kubectl
  script:
    - apk add gettext
    - kubectl config use-context "$KUBE_CONTEXT"
    - envsubst --validate=false < k8s/bencloud-dev-server.yml | kubectl apply -f -
    # - kubectl apply -f k8s/bencloud-dev-server.yml -n benmap-dev
  environment:
    name: testdev
    url: https://dev.bencloud-dev.aws.epa.gov/api
    kubernetes:
      namespace: benmap-dev

deploy_staging:
  stage: deploy_nonprod
  only: 
    - main
  tags:
    - benmapstagegitlab
  when: manual
  image: dtzar/helm-kubectl
  script:
    - apk add gettext
    - kubectl config use-context "$KUBE_CONTEXT"
    - envsubst --validate=false < k8s/bencloud-stage-server.yml | kubectl apply -f -
    # - kubectl apply -f k8s/bencloud-stage-server.yml -n benmap-stg
  environment:
    name: staging
    url: https://stg.bencloud-stage.aws.epa.gov/api
    kubernetes:
      namespace: benmap-stg

